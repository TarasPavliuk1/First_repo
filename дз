# Для вирішення цього завдання потрібно написати скрипт на мові програмування Python. Нижче ви побачите базовий шаблон для такого скрипта:


import os
import shutil

def normalize(filename):
    # Реалізуйте функцію normalize
    # ...

def process_folder(folder_path):
    # Реалізуйте функцію, яка обробляє папку
    # ...

if __name__ == "__main__":
    import sys

    if len(sys.argv) != 2:
        print("Usage: python sort.py <folder_path>")
        sys.exit(1)

    folder_path = sys.argv[1]

    # Початок обробки папки
    process_folder(folder_path)

    print("Sorting completed.")
# Тепер давайте додамо реалізацію функцій normalize і process_folder. Також, я додав коментарі для кращого розуміння коду:


import os
import shutil
import unicodedata

def normalize(filename):
    # Транслітерація кирилічного алфавіту
    normalized_name = unicodedata.normalize('NFKD', filename).encode('ascii', 'ignore').decode('utf-8')
    # Заміна всіх символів, крім літер латинського алфавіту та цифр, на символ '_'
    normalized_name = ''.join(c if c.isalnum() or c.isspace() else '_' for c in normalized_name)
    return normalized_name

def process_folder(folder_path):
    # Перелік розширень для кожної категорії
    image_extensions = {'JPEG', 'PNG', 'JPG', 'SVG'}
    video_extensions = {'AVI', 'MP4', 'MOV', 'MKV'}
    document_extensions = {'DOC', 'DOCX', 'TXT', 'PDF', 'XLSX', 'PPTX'}
    audio_extensions = {'MP3', 'OGG', 'WAV', 'AMR'}
    archive_extensions = {'ZIP', 'GZ', 'TAR'}

    # Отримати перелік усіх файлів і папок в поточній папці
    items = os.listdir(folder_path)

    for item in items:
        item_path = os.path.join(folder_path, item)

        if os.path.isdir(item_path):
            # Рекурсивно обробляємо вкладені папки
            process_folder(item_path)
        else:
            # Отримуємо розширення файлу
            _, extension = os.path.splitext(item)
            extension = extension[1:].upper()  # Відкидаємо крапку з початку розширення

            # Обробляємо файл відповідно до його розширення
            if extension in image_extensions:
                destination_folder = 'images'
            elif extension in video_extensions:
                destination_folder = 'video'
            elif extension in document_extensions:
                destination_folder = 'documents'
            elif extension in audio_extensions:
                destination_folder = 'audio'
            elif extension in archive_extensions:
                destination_folder = 'archives'
                # Розпаковуємо архів
                archive_destination = os.path.join(destination_folder, normalize(item))
                shutil.unpack_archive(item_path, archive_destination)
                continue
            else:
                destination_folder = 'unknown'

            # Створюємо папку, якщо вона ще не існує
            target_folder = os.path.join(folder_path, destination_folder)
            os.makedirs(target_folder, exist_ok=True)

            # Перейменовуємо та переміщуємо файл
            normalized_name = normalize(item)
            new_path = os.path.join(target_folder, normalized_name)
            shutil.move(item_path, new_path)

    # Видаляємо порожні папки
    for item in items:
        item_path = os.path.join(folder_path, item)
        if os.path.isdir(item_path) and not os.listdir(item_path):
            os.rmdir(item_path)
# Цей скрипт враховує усі вказані умови та виконує сортування та перейменування файлів та папок. Щоб визначити нові категорії або розширення, просто додайте їх до відповідних множин.